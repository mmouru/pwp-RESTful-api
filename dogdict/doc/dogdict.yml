---
openapi: 3.0.3

servers:
  - url: /api

info:
  title: DogDict
  version: 0.0.1
  description: |
    This is an API developed for Programmable Web Project course
    held at University of Oulu (Spring 2023). It is an API that
    returns information about different types of dogs, breeds and
    facts and characteristics about specific breeds.
tags:
  - name: group
    description: Contains everything related to Groups (of dogs)
  - name: breed
    description: Contains everything related dog breeds, each of which belongs to a Group (of dogs)
  - name: characteristics
    description: Contains everything related characteristics of dogs, each of which belong to a Breed
  - name: facts
    description: Contains everything related to facts of breeds, each of which belong to a Breed
    
components:

  parameters:
  
    group_name:
      description: Selected groups unique name
      in: path
      name: group
      required: true
      schema:
        type: string
        
    breed_name:
      description: Selected breeds unique name
      in: path
      name: breed
      required: true
      schema:
        type: number
        
        
  schemas:
  
    Group:
      properties:
        name:
          description: Name of the group of dogs e.x. Terrier
          type: string
      required:
      - name
      
    BreedGet: 
      properties: 
        name:
          description: Breed's unique name
          type: string
        id:
          description: Breed's unique id
          type: number
        group:
          description: The information about group of dogs that the breed belongs to (ex. Terrier)
          type: array
          items:
            oneOf:
              - type: string
              - type: integer
        facts:
          description: Facts related to the dog.
          type: array
          items:
            type: string
        characteristics:
          description: Characteristics of the dog (char_id, life_span, coat_length, exercise)
          type: array
          items:
            type: integer
            
    BreedPost:
      properties:
        name:
          description: Breed's unique name
          type: string
        group:
          description: The name of the group of dogs that the breed belongs to (ex. Terrier)
          type: string
      required:
      - name
      
    Fact:
      properties:
        breed:
          description: Breed's unique name
          type: string
        fact:
          description: A fact about the specific breed
          type: string
      required:
      - fact

    Characteristics:
      properties:
        breed:
          description: Names of the breed(s) that the characteristics belong to.
          type: string
        char_id:
          description: The Id of the characteristics
          type: number
        coat_length:
          description: Coat length of the breed(s) in question
          type: number
          maximum: 1
        life_span:
          description: Life span of the breed(s)
          type: number
          minimum: 5
          maximum: 25
        exercise:
          description: Daily exercise in hours required by the breed(s)
          type: number
          minimum: 0
          maximum: 5
      required:
      - life_span
  
  
# need to implement these into different files but I just cant figure out how currently ....
paths:

  # GroupCollection
  /api/groups/:
    get:
      tags:
      - group
      description: "Gets the names of groups of dogs"
      responses:
        "200":
          description: List of the names of groups of dogs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              example:
                - name: Terrier
                  id: 1
                - name: Pastoral
                  id: 2
                - name: Working
                  id: 3
    post:
      tags:
      - group
      description: "Posts a new dog group"
      requestBody:
        description: String of group name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
            example:
              - name: Bulldog
      responses:
        "409":
          description: That group already exists.
        "200":
          description: The group was created successfully
          headers:
            Location: 
              description: URI of the new Group that was created
              schema: 
                type: string
        "400":
          description: Request body was not valid.
          
  /api/groups/{group_name}/:
    put:
      tags:
      - group
      description: "Changes the name of a group of dogs"
      requestBody:
        description: JSON document that contains the name for a new Group
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
            example:
              name: Hunting
      parameters:
      - in: path
        name: group_name
        schema:
          type: string
        required: true
      responses:
       "204":
          description: Successfully changed the group name
          headers:
            Location: 
              description: URI of the changed Group that was created
              schema: 
                type: string
       "415":
          description: Unsupported Media Type
    get:
      tags:
      - group
      description: Gets information from one specific group
      parameters:
      - in: path
        name: group_name
        schema:
          type: string
        required: true
      responses:
       "200":
          description: Successfully found the specific group
          content:
            application/json:
              example:
                - name: "Pastoral"
                  breeds: ["Anatolina Shepherd Dog", "Australian Shepherd"]
                - name: "New Group Without Breeds"
                  breeds: []
       "400":
          description: Did not find the group


  # BreedCollection
  /api/groups/{group_name}/breeds/:
    get:
      tags:
      - breed
      description: "Gets the list of breeds"
      parameters:
      - in: path
        name: group_name
        schema:
          type: string
        required: True
      responses:
        "200":
          description: List of breeds with information about them and their group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BreedGet"
              example:
                - name: Australian Terrier
                  id: 1
                  group:
                    name: Terrier
                    id: 1
                  facts: They are small dogs
                  characteristics:
                    char_id: 1
                    life_span: 6
                    coat_length: 0.2
                - name: Malamutian Bulldog
                  id: 1
                  group: 
                    name: Bulldog
                    id: 5
                  facts: null
                  characteristics:
                    char_id: 1
                    life_span: 6
                    coat_length: null
                    exercise: null
    post:
      tags:
      - breed
      description: "Posts a breed into the breed collection if it fits the schema."
      parameters:
      - in: path
        name: group_name
        schema:
          type: string
        required: True
      requestBody:
        description: JSON document that contains the basic information for a new breed
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BreedPost"
            example:
              name: Malamutian Terrier
              group: 1
      responses:
        '201':
          description: The product was created successfully
          headers:
            Location: 
              description: URI of the new Breed that was created
              schema: 
                type: string
        '400':
          description: The request body was not valid
        '409':
          description: A breed with the same name already exists
        '415':
          description: Wrong media type was used
          
  # BreedItem
  /api/groups/{group_name}/breeds/{breed_name}/:
    get:
      tags:
      - breed
      description: "Gets a specific breed"
      parameters:
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      responses:
        "200":
          description: Gives information about a specific breed which may or may not have facts and/or characteristics.
          content:
            application/json:
              example:
                - name: Australian Terrier
                  id: 1
                  group:
                    name: Terrier,
                    id: 1
                  facts: They are small dogs
                  characteristics:
                    char_id: 1
                    life_span: 6
                    coat_length: 0.2
                    exercise: 1.0
                - name: Laurin Terrier
                  id: 1
                  group:
                    name: Terrier,
                    id: 1
        "400":
          description: "Breed was not found"
    put:
      tags:
      - breed
      description: "Posts a breed into the breed collection if it fits the schema."
      parameters:
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      requestBody:
        description: JSON document that contains the basic information for a new breed
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BreedPost"
            example:
              name: Malamutian Terrier
              group: 1
      responses:
        '204':
          description: The breed was changed successfully
          headers:
            Location: 
              description: URI of the Breed that was changed
              schema: 
                type: string
        '400':
          description: The request body was not valid or the breed was not found
        '409':
          description: A breed with the same name already exists
        '415':
          description: Wrong media type was used
    delete:
      tags:
      - breed
      description: "Deletes a specific breed from the database"
      parameters:
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      responses:
        "204":
          description: Successfully removed a breed from database
        "400":
          description: The breed with id was not found
          
# CharacteristicsCollection
  /api/groups/{group_name}/breeds/{breed_name}/characteristics/:
    get:
      tags:
      - characteristics
      description: "Gets the list of characteristics"
      parameters:
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      responses:
        "200":
          description: List of characteristics with information about them and the breed(s) they belong to.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Characteristics"
              example:
              - in_breed: Australian Terrier
                char_id: 1
                life_span: 6
                coat_length: 0.2
                exercise: 1.2
              - breed: ["Australian Terrier", "Laurin Terrier"]
                char_id: 2
                life_span: 8
        "400":
          description: "No characteristics was found"
    post:
      tags:
      - characteristics
      description: "Posts a new characteristics and links it to an existing breed"
      parameters:
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      requestBody:
        description: JSON document that contains the basic information for a new breed
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Characteristics"
            example:
              - life_span: 6
                coat_length: 0.2
                exercise: 1.2
              - life_span: 6
      responses:
        '201':
          description: The Characteristics was created successfully
          headers:
            Location: 
              description: URI of the new Characteristics that was created
              schema: 
                type: string
        '400':
          description: The request body was not valid
        '409':
          description: The characteristics already exists
        '415':
          description: Wrong media type was used
    put:
      tags:
      - characteristics
      description: "Changes the characteristics of a breed"
      parameters:
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      requestBody:
        description: JSON document that contains atleast life_span characterisctics (others are optional)
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Characteristics"
            example:
              - char_id: 1
                life_span: 6
                coat_length: 0.2
                exercise: 1.2
              - char_id: 1
                life_span: 6
      responses:
       "204":
          description: Successfully changed the group name
          headers:
            Location: 
              description: URI of the changed Group that was created
              schema: 
                type: string
       "415":
          description: Unsupported Media Type


  # FactCollection
  /api/groups/{group_name}/breeds/{breed_name}/facts/:
    get:
      tags:
      - facts
      description: "Gets all of the facts in the database"
      parameters:
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      responses:
        "200":
          description: List of facts in the database
          content:
            application/json:
              example:
              - fact: "Example fact of a dog breed."
                fact_id: 5
        "400":
          description: Fact not found
    post:
      tags:
      - facts
      description: "Posts a new fact into the database"
      parameters:
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      requestBody:
        description: JSON document that contains the fact and a breed name that it is linked to
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fact'
            example:
              - breed: Australian terrier
                fact: "They are very funny dogs!"
      responses:
        "201":
          description: "New fact successfully created"
          headers:
            Location: 
              description: URI of the new Fact that was created
              schema: 
                type: string
        "404":
          description: "Breed that the fact was tried to link to does not exist"
        "400":
          description: "Bad body"
        "409":
          description: "Duplicate fact (for same breed)"
  
  # FactItem
  /api/groups/{group_name}/breeds/{breed_name}/{fact_id}/:
    delete:
      tags:
      - facts
      description: Deletes a specific breed from the database using group_name and breed_name to query it
      parameters:
      - in: path
        name: fact_id
        schema:
          type: integer
        required: true
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      responses:
        "204":
          description: Successfully deleted a fact!
        "404":
          description: Fact with that id not found
    get:
      tags:
      - facts
      description: Gets a specific breed from the database using group_name and breed_name to query it
      parameters:
      - in: path
        name: fact_id
        schema:
          type: integer
        required: true
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      responses:
        "200":
          description: Found the fact_id and returned the fact
          content:
            application/json:
              example:
                "items": ["This is fact1 about this breed.", "this is fact2 about this breed"]
        "400":
          description: Fact with that id not found
    put:
      description: Modifies a specific breed from the database using group_name and breed_name to query it
      tags:
      - facts
      parameters:
      - in: path
        name: fact_id
        schema:
          type: integer
        required: true
      - in: path
        name: breed_name
        schema:
          type: string
        required: true
        description: This is the breed's name that is being queried from the database
      - in: path
        name: group_name
        schema:
          type: string
        required: true
        description: This is the group's name that is used to find the breed_name from
      responses:
        "204":
          description: Successfully created a fact
        "400":
          description: Bad body
